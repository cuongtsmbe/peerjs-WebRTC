import { OnAnimationEnd, OnChange, OnFinish, OnHold, OnRelease } from "@egjs/axes";
import Flicking from "../../Flicking";
export declare enum STATE_TYPE {
    IDLE = 0,
    HOLDING = 1,
    DRAGGING = 2,
    ANIMATING = 3,
    DISABLED = 4
}
declare abstract class State {
    abstract readonly holding: boolean;
    abstract readonly animating: boolean;
    onHold(ctx: {
        flicking: Flicking;
        axesEvent: OnHold;
        transitTo: (nextState: STATE_TYPE) => State;
    }): void;
    onChange(ctx: {
        flicking: Flicking;
        axesEvent: OnChange;
        transitTo: (nextState: STATE_TYPE) => State;
    }): void;
    onRelease(ctx: {
        flicking: Flicking;
        axesEvent: OnRelease;
        transitTo: (nextState: STATE_TYPE) => State;
    }): void;
    onAnimationEnd(ctx: {
        flicking: Flicking;
        axesEvent: OnAnimationEnd;
        transitTo: (nextState: STATE_TYPE) => State;
    }): void;
    onFinish(ctx: {
        flicking: Flicking;
        axesEvent: OnFinish;
        transitTo: (nextState: STATE_TYPE) => State;
    }): void;
}
export default State;
